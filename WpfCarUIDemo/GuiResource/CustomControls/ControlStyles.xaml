<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:customControls="clr-namespace:GuiResource.CustomControls">
<Style x:Key="WindowStyle" TargetType="Window">
    <Setter Property="AllowsTransparency" Value="True"/>
    <Setter Property="Background" Value="Transparent"/>
    <Setter Property="WindowStyle" Value="None"></Setter>
</Style>
    <Style x:Key="TextRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="{DynamicResource ResourceKey=NormalBrush}" />
        <Setter Property="FontSize" Value="14">
        </Setter>
        <Setter Property="Template">
            <Setter.Value>             
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="Border"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Padding="6,6" CornerRadius="5"
                            Background="{TemplateBinding Background}">
                        <TextBlock x:Name="textBlock" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   Background="Transparent"
                                   FontSize="{TemplateBinding FontSize}"
                                   FontFamily="{DynamicResource HOS_Medium}"
                                   TextAlignment="Center"
                                   Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                                   Foreground="{DynamicResource MainTextBrush}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ChooseBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ChooseBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            Padding="10"
                            Background="{TemplateBinding Background}"
                            CornerRadius="5">
                        <Image Width="16">
                            <Image.Source>
                                <DrawingImage Drawing="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}">
                                </DrawingImage>
                            </Image.Source>
                        </Image>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ChooseBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ChooseBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MainTextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource HOS_Medium}" />
        <Setter Property="Foreground" Value="{DynamicResource MainTextBrush}" />
    </Style>
    <Style x:Key="TextBlockStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource HOS_Regular}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    </Style>

    <Style x:Key="ElipseTextRadioButtonStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource MainTextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="Border"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            CornerRadius="100"
                            Background="{TemplateBinding Background}">
                        <TextBlock x:Name="TextBlock" HorizontalAlignment="Center" VerticalAlignment="Center"
                                   Text="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                                   FontFamily="{StaticResource HOS_Bold}"
                                   FontSize="{TemplateBinding FontSize}"
                                   TextAlignment="Center">
                        </TextBlock>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource TopicBrush}"/>
                            <Setter TargetName="TextBlock" Property="Foreground" Value="{DynamicResource LightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource TopicBrush}"/>
                            <Setter TargetName="TextBlock" Property="Foreground" Value="{DynamicResource LightBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="BorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
    </Style>


    <Style x:Key="CardBorderStyle" TargetType="Border">
        <Setter Property="Margin" Value="0,26.8,0,0"/>
        <Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Storyboard.TargetProperty="Margin" To="0,0,0,0" Duration="0:0:0.6"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ThicknessAnimation Storyboard.TargetProperty="Margin" To="0,0,0,0" Duration="0:0:0.3"/>
                            <ThicknessAnimation Storyboard.TargetProperty="Margin" To="0,26.8,0,0" Duration="0:0:0.6"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="IconButtonStyler" TargetType="{x:Type customControls:IconButton}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type customControls:IconButton}">
                    <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Width}">
                        <Border x:Name="Border"
                                CornerRadius="10"
                                Background="{TemplateBinding Background}">
                            <Image Margin="10">
                                <Image.Source>
                                    <DrawingImage Drawing="{Binding Icon ,RelativeSource={RelativeSource TemplatedParent}}"></DrawingImage>
                                </Image.Source>
                            </Image>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ChooseBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ChooseBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>